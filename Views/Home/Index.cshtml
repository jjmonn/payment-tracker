@section scripts {
    @Scripts.Render("~/bundles/app")
}

@{
    ViewBag.Title = "Home Page";
}

<div class="jumbotron">
    <h1>Ala France Suppliers' Payments</h1>
</div>

<div class="row">
    <div class="col-md-4">
        <h2>Welcome to Suppliers Payments</h2>
        <p>
            This application allows you to manage the trade payables.
        </p>
    </div>
    <div class="col-md-4">
        <h2>Upload SAP invoices</h2>
        <p>A daily SAP upload is necessary to keep the payments up to date.</p>
        <p>The system identify duplicates and prevent errors.</p>
    </div>
    <div class="col-md-4">
        <h2>Payments tracking</h2>
        <p>You can vizualize the invoices due as of today as well as the invoices to be paid in the future.</p>
    </div>
</div>

<div>
    <h2>Invoices overdue</h2>
    <ul id="invoices" />
</div>
<div>
    <h2>Search by ID</h2>
    <input type="text" id="prodId" size="5" />
    <input type="button" value="Search" onclick="find();" />
    <p id="product" />
</div>

<script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-2.0.3.min.js"></script>
<script>
    var uri = 'api/invoices';

    $(document).ready(function () {
        // Send an AJAX request
        $.getJSON(uri)
            .done(function (data) {
                // On success, 'data' contains a list of products.
                total_amount_EUR = 0;
                total_amount_USD = 0;
                total_amount_GBP = 0;

                $.each(data, function (key, item) {
                    // Add a list item for the product.
                    _date = new Date(item.DueDate);
                    if (_date <= Date.now() && item.Paid === false) {
                        $('<li>', { text: formatItem(item) }).appendTo($('#invoices'));
                        switch (item.Currency) {
                            case "EUR": total_amount_EUR += item.DueAmount;
                                break;

                            case "USD": total_amount_USD += item.DueAmount;
                                break;

                            case "GBP": total_amount_GBP += item.DueAmount;
                                break;
                        }
                    }
                });
                $('<p>', { text: '' }).appendTo($('#invoices'));
                $('<li>', { text: 'Total overdue EUR: € ' + total_amount_EUR }).appendTo($('#invoices'));
                $('<li>', { text: 'Total overdue USD: $ ' + total_amount_USD }).appendTo($('#invoices'));
                $('<li>', { text: 'Total overdue GBP: £ ' + total_amount_GBP }).appendTo($('#invoices'));

            });
    });

    function formatItem(item) {
        return item.SupplierName + ' - ' + item.Currency + ' ' + item.DueAmount + ': - ' + moment(item.DueDate).format('MMM Do YY');
    }


</script>